// Code generated by protoc-gen-go-neofs. DO NOT EDIT.

package refs

import "github.com/nspcc-dev/neofs-api-go/v2/util/proto"

func (x *Address) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.ContainerId)
	size += proto.NestedStructureSize(2, x.ObjectId)
	return size
}

func (x *Address) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.ContainerId)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.ObjectId)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *ObjectID) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.BytesSize(1, x.Value)
	return size
}

func (x *ObjectID) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.BytesMarshal(1, buf[offset:], x.Value)
	return buf, nil
}

func (x *ContainerID) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.BytesSize(1, x.Value)
	return size
}

func (x *ContainerID) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.BytesMarshal(1, buf[offset:], x.Value)
	return buf, nil
}

func (x *OwnerID) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.BytesSize(1, x.Value)
	return size
}

func (x *OwnerID) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.BytesMarshal(1, buf[offset:], x.Value)
	return buf, nil
}

func (x *SubnetID) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.Fixed32Size(1, x.Value)
	return size
}

func (x *SubnetID) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.Fixed32Marshal(1, buf[offset:], x.Value)
	return buf, nil
}

func (x *Version) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.UInt32Size(1, x.Major)
	size += proto.UInt32Size(2, x.Minor)
	return size
}

func (x *Version) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.UInt32Marshal(1, buf[offset:], x.Major)
	offset += proto.UInt32Marshal(2, buf[offset:], x.Minor)
	return buf, nil
}

func (x *Signature) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.BytesSize(1, x.Key)
	size += proto.BytesSize(2, x.Sign)
	size += proto.EnumSize(3, int32(x.Scheme))
	return size
}

func (x *Signature) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.BytesMarshal(1, buf[offset:], x.Key)
	offset += proto.BytesMarshal(2, buf[offset:], x.Sign)
	offset += proto.EnumMarshal(3, buf[offset:], int32(x.Scheme))
	return buf, nil
}

func (x *SignatureRFC6979) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.BytesSize(1, x.Key)
	size += proto.BytesSize(2, x.Sign)
	return size
}

func (x *SignatureRFC6979) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.BytesMarshal(1, buf[offset:], x.Key)
	offset += proto.BytesMarshal(2, buf[offset:], x.Sign)
	return buf, nil
}

func (x *Checksum) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.EnumSize(1, int32(x.Type))
	size += proto.BytesSize(2, x.Sum)
	return size
}

func (x *Checksum) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.EnumMarshal(1, buf[offset:], int32(x.Type))
	offset += proto.BytesMarshal(2, buf[offset:], x.Sum)
	return buf, nil
}
