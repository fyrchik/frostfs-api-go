// Code generated by protoc-gen-go-neofs. DO NOT EDIT.

package reputation

import "github.com/nspcc-dev/neofs-api-go/v2/util/proto"

func (x *PeerID) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.BytesSize(1, x.PublicKey)
	return size
}

func (x *PeerID) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.BytesMarshal(1, buf[offset:], x.PublicKey)
	return buf, nil
}

func (x *Trust) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Peer)
	size += proto.Float64Size(2, x.Value)
	return size
}

func (x *Trust) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Peer)
	if err != nil {
		return nil, err
	}
	offset += n
	offset += proto.Float64Marshal(2, buf[offset:], x.Value)
	return buf, nil
}

func (x *PeerToPeerTrust) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.TrustingPeer)
	size += proto.NestedStructureSize(2, x.Trust)
	return size
}

func (x *PeerToPeerTrust) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.TrustingPeer)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Trust)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *GlobalTrust_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Manager)
	size += proto.NestedStructureSize(2, x.Trust)
	return size
}

func (x *GlobalTrust_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Manager)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Trust)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *GlobalTrust) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Version)
	size += proto.NestedStructureSize(2, x.Body)
	size += proto.NestedStructureSize(3, x.Signature)
	return size
}

func (x *GlobalTrust) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Version)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.Signature)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}
