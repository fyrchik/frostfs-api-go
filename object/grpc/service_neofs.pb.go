// Code generated by protoc-gen-go-neofs. DO NOT EDIT.

package object

import "github.com/nspcc-dev/neofs-api-go/v2/util/proto"

func (x *GetRequest_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Address)
	size += proto.BoolSize(2, x.Raw)
	return size
}

func (x *GetRequest_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Address)
	if err != nil {
		return nil, err
	}
	offset += n
	offset += proto.BoolMarshal(2, buf[offset:], x.Raw)
	return buf, nil
}

func (x *GetRequest) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *GetRequest) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *GetResponse_Body_Init) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.ObjectId)
	size += proto.NestedStructureSize(2, x.Signature)
	size += proto.NestedStructureSize(3, x.Header)
	return size
}

func (x *GetResponse_Body_Init) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.ObjectId)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Signature)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.Header)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *GetResponse_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	if inner, ok := x.ObjectPart.(*GetResponse_Body_Init_); ok {
		size += proto.NestedStructureSize(1, inner.Init)
	}
	if inner, ok := x.ObjectPart.(*GetResponse_Body_Chunk); ok {
		size += proto.BytesSize(2, inner.Chunk)
	}
	if inner, ok := x.ObjectPart.(*GetResponse_Body_SplitInfo); ok {
		size += proto.NestedStructureSize(3, inner.SplitInfo)
	}
	return size
}

func (x *GetResponse_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	if inner, ok := x.ObjectPart.(*GetResponse_Body_Init_); ok {
		n, err = proto.NestedStructureMarshal(1, buf[offset:], inner.Init)
		if err != nil {
			return nil, err
		}
		offset += n
	}
	if inner, ok := x.ObjectPart.(*GetResponse_Body_Chunk); ok {
		offset += proto.BytesMarshal(2, buf[offset:], inner.Chunk)
	}
	if inner, ok := x.ObjectPart.(*GetResponse_Body_SplitInfo); ok {
		n, err = proto.NestedStructureMarshal(3, buf[offset:], inner.SplitInfo)
		if err != nil {
			return nil, err
		}
		offset += n
	}
	return buf, nil
}

func (x *GetResponse) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *GetResponse) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *PutRequest_Body_Init) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.ObjectId)
	size += proto.NestedStructureSize(2, x.Signature)
	size += proto.NestedStructureSize(3, x.Header)
	size += proto.UInt32Size(4, x.CopiesNumber)
	return size
}

func (x *PutRequest_Body_Init) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.ObjectId)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Signature)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.Header)
	if err != nil {
		return nil, err
	}
	offset += n
	offset += proto.UInt32Marshal(4, buf[offset:], x.CopiesNumber)
	return buf, nil
}

func (x *PutRequest_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	if inner, ok := x.ObjectPart.(*PutRequest_Body_Init_); ok {
		size += proto.NestedStructureSize(1, inner.Init)
	}
	if inner, ok := x.ObjectPart.(*PutRequest_Body_Chunk); ok {
		size += proto.BytesSize(2, inner.Chunk)
	}
	return size
}

func (x *PutRequest_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	if inner, ok := x.ObjectPart.(*PutRequest_Body_Init_); ok {
		n, err = proto.NestedStructureMarshal(1, buf[offset:], inner.Init)
		if err != nil {
			return nil, err
		}
		offset += n
	}
	if inner, ok := x.ObjectPart.(*PutRequest_Body_Chunk); ok {
		offset += proto.BytesMarshal(2, buf[offset:], inner.Chunk)
	}
	return buf, nil
}

func (x *PutRequest) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *PutRequest) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *PutResponse_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.ObjectId)
	return size
}

func (x *PutResponse_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.ObjectId)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *PutResponse) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *PutResponse) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *DeleteRequest_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Address)
	return size
}

func (x *DeleteRequest_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Address)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *DeleteRequest) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *DeleteRequest) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *DeleteResponse_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Tombstone)
	return size
}

func (x *DeleteResponse_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Tombstone)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *DeleteResponse) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *DeleteResponse) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *HeadRequest_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Address)
	size += proto.BoolSize(2, x.MainOnly)
	size += proto.BoolSize(3, x.Raw)
	return size
}

func (x *HeadRequest_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Address)
	if err != nil {
		return nil, err
	}
	offset += n
	offset += proto.BoolMarshal(2, buf[offset:], x.MainOnly)
	offset += proto.BoolMarshal(3, buf[offset:], x.Raw)
	return buf, nil
}

func (x *HeadRequest) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *HeadRequest) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *HeaderWithSignature) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Header)
	size += proto.NestedStructureSize(2, x.Signature)
	return size
}

func (x *HeaderWithSignature) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Header)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Signature)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *HeadResponse_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	if inner, ok := x.Head.(*HeadResponse_Body_Header); ok {
		size += proto.NestedStructureSize(1, inner.Header)
	}
	if inner, ok := x.Head.(*HeadResponse_Body_ShortHeader); ok {
		size += proto.NestedStructureSize(2, inner.ShortHeader)
	}
	if inner, ok := x.Head.(*HeadResponse_Body_SplitInfo); ok {
		size += proto.NestedStructureSize(3, inner.SplitInfo)
	}
	return size
}

func (x *HeadResponse_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	if inner, ok := x.Head.(*HeadResponse_Body_Header); ok {
		n, err = proto.NestedStructureMarshal(1, buf[offset:], inner.Header)
		if err != nil {
			return nil, err
		}
		offset += n
	}
	if inner, ok := x.Head.(*HeadResponse_Body_ShortHeader); ok {
		n, err = proto.NestedStructureMarshal(2, buf[offset:], inner.ShortHeader)
		if err != nil {
			return nil, err
		}
		offset += n
	}
	if inner, ok := x.Head.(*HeadResponse_Body_SplitInfo); ok {
		n, err = proto.NestedStructureMarshal(3, buf[offset:], inner.SplitInfo)
		if err != nil {
			return nil, err
		}
		offset += n
	}
	return buf, nil
}

func (x *HeadResponse) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *HeadResponse) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *SearchRequest_Body_Filter) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.EnumSize(1, int32(x.MatchType))
	size += proto.StringSize(2, x.Key)
	size += proto.StringSize(3, x.Value)
	return size
}

func (x *SearchRequest_Body_Filter) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.EnumMarshal(1, buf[offset:], int32(x.MatchType))
	offset += proto.StringMarshal(2, buf[offset:], x.Key)
	offset += proto.StringMarshal(3, buf[offset:], x.Value)
	return buf, nil
}

func (x *SearchRequest_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.ContainerId)
	size += proto.UInt32Size(2, x.Version)
	for i := range x.Filters {
		size += proto.NestedStructureSize(3, x.Filters[i])
	}
	return size
}

func (x *SearchRequest_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.ContainerId)
	if err != nil {
		return nil, err
	}
	offset += n
	offset += proto.UInt32Marshal(2, buf[offset:], x.Version)
	for i := range x.Filters {
		n, err = proto.NestedStructureMarshal(3, buf[offset:], x.Filters[i])
		if err != nil {
			return nil, err
		}
		offset += n
	}
	return buf, nil
}

func (x *SearchRequest) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *SearchRequest) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *SearchResponse_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	for i := range x.IdList {
		size += proto.NestedStructureSize(1, x.IdList[i])
	}
	return size
}

func (x *SearchResponse_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	for i := range x.IdList {
		n, err = proto.NestedStructureMarshal(1, buf[offset:], x.IdList[i])
		if err != nil {
			return nil, err
		}
		offset += n
	}
	return buf, nil
}

func (x *SearchResponse) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *SearchResponse) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *Range) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.UInt64Size(1, x.Offset)
	size += proto.UInt64Size(2, x.Length)
	return size
}

func (x *Range) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.UInt64Marshal(1, buf[offset:], x.Offset)
	offset += proto.UInt64Marshal(2, buf[offset:], x.Length)
	return buf, nil
}

func (x *GetRangeRequest_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Address)
	size += proto.NestedStructureSize(2, x.Range)
	size += proto.BoolSize(3, x.Raw)
	return size
}

func (x *GetRangeRequest_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Address)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Range)
	if err != nil {
		return nil, err
	}
	offset += n
	offset += proto.BoolMarshal(3, buf[offset:], x.Raw)
	return buf, nil
}

func (x *GetRangeRequest) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *GetRangeRequest) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *GetRangeResponse_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	if inner, ok := x.RangePart.(*GetRangeResponse_Body_Chunk); ok {
		size += proto.BytesSize(1, inner.Chunk)
	}
	if inner, ok := x.RangePart.(*GetRangeResponse_Body_SplitInfo); ok {
		size += proto.NestedStructureSize(2, inner.SplitInfo)
	}
	return size
}

func (x *GetRangeResponse_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	if inner, ok := x.RangePart.(*GetRangeResponse_Body_Chunk); ok {
		offset += proto.BytesMarshal(1, buf[offset:], inner.Chunk)
	}
	if inner, ok := x.RangePart.(*GetRangeResponse_Body_SplitInfo); ok {
		n, err = proto.NestedStructureMarshal(2, buf[offset:], inner.SplitInfo)
		if err != nil {
			return nil, err
		}
		offset += n
	}
	return buf, nil
}

func (x *GetRangeResponse) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *GetRangeResponse) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *GetRangeHashRequest_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Address)
	for i := range x.Ranges {
		size += proto.NestedStructureSize(2, x.Ranges[i])
	}
	size += proto.BytesSize(3, x.Salt)
	size += proto.EnumSize(4, int32(x.Type))
	return size
}

func (x *GetRangeHashRequest_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Address)
	if err != nil {
		return nil, err
	}
	offset += n
	for i := range x.Ranges {
		n, err = proto.NestedStructureMarshal(2, buf[offset:], x.Ranges[i])
		if err != nil {
			return nil, err
		}
		offset += n
	}
	offset += proto.BytesMarshal(3, buf[offset:], x.Salt)
	offset += proto.EnumMarshal(4, buf[offset:], int32(x.Type))
	return buf, nil
}

func (x *GetRangeHashRequest) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *GetRangeHashRequest) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}

func (x *GetRangeHashResponse_Body) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.EnumSize(1, int32(x.Type))
	size += proto.RepeatedBytesSize(2, x.HashList)
	return size
}

func (x *GetRangeHashResponse_Body) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	offset += proto.EnumMarshal(1, buf[offset:], int32(x.Type))
	offset += proto.RepeatedBytesMarshal(2, buf[offset:], x.HashList)
	return buf, nil
}

func (x *GetRangeHashResponse) StableSize() (size int) {
	if x == nil {
		return
	}
	size += proto.NestedStructureSize(1, x.Body)
	size += proto.NestedStructureSize(2, x.MetaHeader)
	size += proto.NestedStructureSize(3, x.VerifyHeader)
	return size
}

func (x *GetRangeHashResponse) StableMarshal(buf []byte) ([]byte, error) {
	if x == nil {
		return []byte{}, nil
	}
	if buf == nil {
		buf = make([]byte, x.StableSize())
	}
	var err error
	var offset, n int
	_, _, _ = err, offset, n
	n, err = proto.NestedStructureMarshal(1, buf[offset:], x.Body)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(2, buf[offset:], x.MetaHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	n, err = proto.NestedStructureMarshal(3, buf[offset:], x.VerifyHeader)
	if err != nil {
		return nil, err
	}
	offset += n
	return buf, nil
}
